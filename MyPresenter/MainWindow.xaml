<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyPresenter"
        mc:Ignorable="d"
        x:Class="MyPresenter.MainWindow"
        Title="MyPresenter" Height="800" Width="1283" Background="Black"
        Icon="icon-launcher-camera.ico" Foreground="White" WindowStartupLocation="CenterScreen"
        Loaded="Window_Loaded"
        ContentRendered="Window_ContentRendered"
        KeyDown="Window_KeyDown"
        Closed="Window_Closed"
        Closing="Window_Closing">
    <Window.Resources>
        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
    </Window.Resources>

    <Grid x:Name="MainGrid" Margin="10,10,2,10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="340"/>
            <ColumnDefinition Width="589*"/>
        </Grid.ColumnDefinitions>

        <Grid x:Name="PreviewGrid" MaxHeight="250" MaxWidth="330" MinHeight="250" MinWidth="330" Height="250" VerticalAlignment="Top" HorizontalAlignment="Left" Width="330" Margin="10,10,0,0" d:IsLocked="True">
            <Grid.Resources>
                <Style x:Key="SetTextColor" TargetType="{x:Type TextBlock}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding UseDarkText, UpdateSourceTrigger=PropertyChanged}" Value="True">
                            <Setter Property="Foreground" Value="Black"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding UseDarkText, UpdateSourceTrigger=PropertyChanged}" Value="False">
                            <Setter Property="Foreground" Value="White"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>

            <Rectangle x:Name="VideoDisplay" Height="240" Margin="-5,-5,0,5" HorizontalAlignment="Center" Width="320" VerticalAlignment="Center" MaxHeight="240" MaxWidth="320" MinHeight="240" MinWidth="320" d:IsLocked="True" />

            <Label x:Name="mediaTimeLabel" Height="21" Margin="0,246,240,-17" VerticalAlignment="Top" HorizontalAlignment="Right" Width="89" BorderBrush="#FFF9F9F9" Background="Black" BorderThickness="1" Foreground="White" FontSize="10" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="2" FontWeight="Bold"/>
            <Label x:Name="countdownTimeLabel" Height="21" Margin="0,246,10,-17" VerticalAlignment="Top" HorizontalAlignment="Right" Width="89" BorderBrush="#FFF9F9F9" Background="Black" BorderThickness="1" Foreground="#FF00C100" FontSize="10" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="2" FontWeight="Bold"/>

            <Viewbox x:Name="textViewBox" Stretch="Uniform" Margin="0" d:IsLocked="True">
                <TextBlock x:Name="scriptTextBlock" MaxWidth="235" MaxHeight="160" Margin="20" TextWrapping="Wrap" Style="{StaticResource ResourceKey=SetTextColor}" TextAlignment="Center" />
            </Viewbox>
        </Grid>

        <Button x:Name="playVideoButton" Content="play" HorizontalAlignment="Left" Margin="10,510,0,0" Width="75" Click="playVideoButton_Click" Height="28" VerticalAlignment="Top"/>
        <Label Content="Welcome Videos" HorizontalAlignment="Left" Height="20" Margin="10,330,0,0" VerticalAlignment="Top" Width="152" Foreground="White" Padding="0"/>
        <ComboBox x:Name="BackgroundAudioComboBox" HorizontalAlignment="Left" Margin="10,407,0,0" VerticalAlignment="Top" Width="320" Height="28" SelectionChanged="BackgroundAudioComboBox_SelectionChanged" SelectedIndex="0"/>
        <ComboBox x:Name="BackgroundVideoComboBox" Margin="10,350,0,0" SelectionChanged="BackgroundVideoComboBox_SelectionChanged" Height="28" VerticalAlignment="Top" HorizontalAlignment="Left" Width="320" SelectedIndex="0"/>
        <Label Content="Background Audio" HorizontalAlignment="Left" Margin="10,385,0,0" VerticalAlignment="Top" Foreground="White" Height="22" Width="108" Padding="0"/>
        <ComboBox x:Name="backgroundImageComboBox" HorizontalAlignment="Left" Margin="10,465,0,0" VerticalAlignment="Top" Width="320" Height="28" SelectionChanged="backgroundImageComboBox_SelectionChanged" SelectedIndex="0"/>
        <Label Content="Background Image" HorizontalAlignment="Left" Margin="10,444,0,0" VerticalAlignment="Top" Foreground="White" Height="21" Width="125" Padding="0"/>
        <ComboBox x:Name="BumperVideoComboBox" HorizontalAlignment="Left" Margin="10,298,0,0" VerticalAlignment="Top" Width="245" Height="28" SelectionChanged="BumperVideoComboBox_SelectionChanged" SelectedIndex="0"/>
        <Label Content="Bumper/Countdown Video" HorizontalAlignment="Left" Margin="10,277,0,0" VerticalAlignment="Top" Foreground="White" Height="21" Width="152" Padding="0"/>
        <TextBox x:Name="startTimeTextBox" HorizontalAlignment="Left" Height="28" Margin="260,297,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="70" MaxLength="5" TextAlignment="Center" FontSize="16" />
        <Label Content="Start Time (hh:mm)" HorizontalAlignment="Left" Margin="220,272,0,0" VerticalAlignment="Top" Foreground="White" Height="26" Width="112"/>
        <ListView x:Name="ScriptListView"
                  Grid.Column="1"
                  Margin="20,10,383,10"
                  Background="#FF151515"
                  ScrollViewer.ScrollChanged="ScrollViewer_ScrollChanged"
                  ScrollViewer.CanContentScroll="True"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  SelectionChanged="ScriptListView_SelectionChanged"
                  KeyDown="ScriptListView_KeyDown"
                  IsSynchronizedWithCurrentItem="False"
                  IsTextSearchEnabled="False"
                  SelectionMode="Single"
                  Focusable="False"
                  ContextMenuService.Placement="Mouse">

            <ListView.Resources>
                <Style TargetType="{x:Type ContextMenu}" x:Key="ContextMenuStyle">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                    <Setter Property="HasDropShadow" Value="True"/>
                    <Setter Property="Padding" Value="-1"/>
                    <Setter Property="FontSize" Value="13"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ContextMenu">
                                <Border 
                                  Name="Border"
                                  Background="{StaticResource WindowBackgroundBrush}"
                                  BorderBrush="{StaticResource SolidBorderBrush}"
                                  BorderThickness="1" >
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasDropShadow" Value="true">
                                        <Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>
                                        <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.Resources>

            <!--Defines a context menu-->
            <ListView.ContextMenu>
                <ContextMenu Style="{StaticResource ContextMenuStyle}">
                    <MenuItem Header="Add" Click="ScriptListItemAdd_Click" IsEnabled="False">
                        <MenuItem.Icon>
                            <Image Source="slideAdd.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Delete" Click="ScriptListItemDelete_Click" IsEnabled="False">
                        <MenuItem.Icon>
                            <Image Source="slideDelete.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Edit" Click="ScriptListItemEdit_Click">
                        <MenuItem.Icon>
                            <Image Source="slideEdit.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </ListView.ContextMenu>

            <ListView.ItemContainerStyle>
                <!-- Force the items to fill all available space. -->
                <Style TargetType="{x:Type ListViewItem}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="true" >
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true" >
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                    </Style.Triggers>

                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Background" Value="DarkSlateGray" />
                    <Setter Property="Margin" Value="0,0,0,0" />
                    <Setter Property="Padding" Value="0,0,0,0" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="FontSize" Value="20" />
                    <Setter Property="TextBlock.TextAlignment" Value="Center" />
                    <Setter Property="TextBlock.TextWrapping" Value="Wrap" />
                    <Setter Property="Width" Value="320px" />
                    <Setter Property="BorderThickness" Value="1,0,1,1" />
                    <Setter Property="BorderBrush" Value="LightGray" />
                    <Setter Property="Height" Value="240" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <ListBox x:Name="serviceListBox" Grid.Column="1" Margin="0,10,10,0" HorizontalContentAlignment="Stretch" KeyDown="serviceListBox_KeyDown" SelectionChanged="serviceListBox_SelectionChanged" HorizontalAlignment="Right" Width="368" IsSynchronizedWithCurrentItem="True" Height="437" VerticalAlignment="Top" PreviewKeyDown="serviceListBox_PreviewKeyDown" GotFocus="serviceListBox_GotFocus">
            <ListBox.Resources>
                <Style TargetType="{x:Type ContextMenu}" x:Key="ContextMenuStyle">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                    <Setter Property="HasDropShadow" Value="True"/>
                    <Setter Property="Padding" Value="-1"/>
                    <Setter Property="FontSize" Value="13"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ContextMenu">
                                <Border 
                                  Name="Border"
                                  Background="{StaticResource WindowBackgroundBrush}"
                                  BorderBrush="{StaticResource SolidBorderBrush}"
                                  BorderThickness="1" >
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasDropShadow" Value="true">
                                        <Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>
                                        <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.Resources>

            <!--Defines a context menu-->
            <ListBox.ContextMenu>
                <ContextMenu Style="{StaticResource ContextMenuStyle}">
                    <MenuItem Header="Add" Click="ServiceListItemAdd_Click" IsEnabled="False">
                        <MenuItem.Icon>
                            <Image Source="slideAdd.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Delete" Click="ServiceListItemDelete_Click" IsEnabled="False">
                        <MenuItem.Icon>
                            <Image Source="slideDelete.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Edit" Click="ServiceListItemEdit_Click">
                        <MenuItem.Icon>
                            <Image Source="slideEdit.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </ListBox.ContextMenu>
            
            <ListBox.ItemTemplate>
                <DataTemplate x:Name="songTemplate">
                    <Grid Margin="0,2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="100" />
                            <!--<ColumnDefinition Width="75" />-->
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{Binding Title}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Error}" Value="True">
                                            <Setter Property="Background" Value="Red" />
                                            <!--<Setter Property="Grid.ColumnSpan" Value="3" />-->
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>

                        <ProgressBar Grid.Column="1" Value="{Binding Progress}" Maximum="100" Minimum="0">
                            <ProgressBar.Style>
                                <Style TargetType="{x:Type ProgressBar}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Progress}" Value="100">
                                            <Setter Property="Foreground" Value="Gray" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ProgressBar.Style>
                        </ProgressBar>

                        <!--<ComboBox x:Name="padComboBox" Grid.Column="1" SelectedValue="{Binding Pad}" ItemsSource="{Binding Pads}">
                            <ComboBox.Style>
                                <Style TargetType="{x:Type ComboBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Error}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>
                        </ComboBox>-->

                        <!--<ComboBox x:Name="loopComboBox" Grid.Column="2" SelectedValue="{Binding Loop}" ItemsSource="{Binding Loops}">
                            <ComboBox.Style>
                                <Style TargetType="{x:Type ComboBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Error}" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>
                        </ComboBox>-->
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Button x:Name="clearTextButton" Content="clear" HorizontalAlignment="Left" Margin="259,621,0,0" Width="71" Click="clearTextButton_Click" Height="28" VerticalAlignment="Top"/>
        <Label x:Name="currentTimeLabel" Height="40" Margin="0,10.3,8.5,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="90" BorderBrush="#FFF9F9F9" Background="Black" BorderThickness="1" Foreground="White" FontSize="24" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="3" FontWeight="Bold"/>
        <TextBox x:Name="displayTextBox" HorizontalAlignment="Left" Margin="10,553,0,0" TextWrapping="Wrap" Width="232" AutoWordSelection="True" AcceptsReturn="True" Height="186" VerticalAlignment="Top"/>
        <Button x:Name="sendTextButton" Content="send" HorizontalAlignment="Left" Margin="259,588,0,0" Width="71" Height="28" VerticalAlignment="Top" Click="sendTextButton_Click"/>
        <CheckBox x:Name="darkTextColorCheckBox" Content="Dark Text" HorizontalAlignment="Left" Margin="175,526,0,0" VerticalAlignment="Top" Foreground="White" Checked="darkTextColorCheckBox_Checked" Unchecked="darkTextColorCheckBox_Unchecked" Height="20" Width="80" />
        <CheckBox x:Name="useBlankImageCheckBox" Content="Blank Image" HorizontalAlignment="Left" Margin="175,510,0,0" VerticalAlignment="Top" Foreground="White" Height="20" Width="95" />
        <Button x:Name="stopVideoButton" Content="stop" HorizontalAlignment="Left" Margin="90,510,0,0" VerticalAlignment="Top" Width="75" Height="28" Click="stopVideoButton_Click"/>
        <Label x:Name="testLabel" Content="Label" Grid.Column="1" HorizontalAlignment="Left" Margin="445,719,0,0" VerticalAlignment="Top" Width="98" Foreground="White"/>
        <TextBox x:Name="quickVerseTextBox" HorizontalAlignment="Left" Height="23" Margin="260,654,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="70" MaxLines="1" KeyDown="quickVerseTextBox_KeyDown" Visibility="Hidden"/>
        <Label Content="Quick Verse" HorizontalAlignment="Left" Margin="259,627,0,0" VerticalAlignment="Top" Foreground="White" Width="69" Padding="3" Visibility="Hidden"/>
        <Label x:Name="numLockLabel" Height="40" Margin="0,10,523,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="290" BorderBrush="#FFF9F9F9" Background="{x:Null}" BorderThickness="0" Foreground="Red" FontSize="24" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="3" FontWeight="Bold" Grid.Column="1" Content="NUMLOCK IS ON" Visibility="Hidden"/>
        <Image x:Name="muteImage" HorizontalAlignment="Left" Height="40" Margin="10,10,0,0" VerticalAlignment="Top" Width="40" MaxHeight="40" MaxWidth="40" MinHeight="40" MinWidth="40" Cursor="Hand" MouseLeftButtonDown="muteImage_MouseLeftButtonDown" Source="AudioMuteOff.png" />
        <RichTextBox x:Name="notesTextBox" Grid.Column="1" Margin="0,490,10,72" HorizontalAlignment="Right" Width="368" FontFamily="Cambria" FontSize="16" TextChanged="notesTextBox_TextChanged" PreviewKeyDown="notesTextBox_PreviewKeyDown"/>
        <Label Content="Notes" Grid.Column="1" Margin="0,465,243,0" RenderTransformOrigin="0.132,-0.312" Foreground="#FFFBFBFB" HorizontalAlignment="Right" Width="132" Height="25" VerticalAlignment="Top"/>
        <Label Content="" x:Name="Label1" Grid.Column="1" Margin="548,682,10,10" Foreground="White" VerticalContentAlignment="Center" />
        <CheckBox x:Name="SlideShowCheckBox" Content="Slide Show" HorizontalAlignment="Left" Height="16" Margin="175,445,0,0" VerticalAlignment="Top" Width="93" Foreground="White"/>
    </Grid>
</Window>
